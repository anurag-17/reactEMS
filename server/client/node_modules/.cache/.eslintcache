[{"D:\\EMS-main\\server\\client\\src\\index.js":"1","D:\\EMS-main\\server\\client\\src\\App.js":"2","D:\\EMS-main\\server\\client\\src\\reportWebVitals.js":"3","D:\\EMS-main\\server\\client\\src\\Adminlogin.js":"4","D:\\EMS-main\\server\\client\\src\\Dashboard.js":"5","D:\\EMS-main\\server\\client\\src\\Adminsignup.js":"6","D:\\EMS-main\\server\\client\\src\\Assignproject.js":"7","D:\\EMS-main\\server\\client\\src\\AddProject.js":"8","D:\\EMS-main\\server\\client\\src\\AddEmployee.js":"9","D:\\EMS-main\\server\\client\\src\\Navbar.js":"10"},{"size":535,"mtime":1653675160096,"results":"11","hashOfConfig":"12"},{"size":947,"mtime":1653833270094,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1653675160151,"results":"14","hashOfConfig":"12"},{"size":2735,"mtime":1656337613683,"results":"15","hashOfConfig":"12"},{"size":1271,"mtime":1653675737150,"results":"16","hashOfConfig":"12"},{"size":3260,"mtime":1653675159917,"results":"17","hashOfConfig":"12"},{"size":8930,"mtime":1653846532058,"results":"18","hashOfConfig":"12"},{"size":10078,"mtime":1653675159868,"results":"19","hashOfConfig":"12"},{"size":10068,"mtime":1653844068207,"results":"20","hashOfConfig":"12"},{"size":1338,"mtime":1653848334436,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6xhts3",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\EMS-main\\server\\client\\src\\index.js",[],[],"D:\\EMS-main\\server\\client\\src\\App.js",["57","58","59"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { Adminlogin } from './Adminlogin';\nimport {Router,BrowserRouter,Routes,Route} from 'react-router-dom'\nimport { Adminsignup } from './Adminsignup';\nimport {Dashboard} from './Dashboard'\nimport { AddProject } from './AddProject';\nimport { AddEmployee } from './AddEmployee';\nimport { Assignproject } from './Assignproject';\n\n\n\nfunction App(validate) {\n\n  return (\n    <div >\n     \n    {/* <Adminsignup/> */}\n     <BrowserRouter>\n    <Routes>\n          <Route path=\"/\" element={<Adminlogin />} />\n\n    </Routes>\n        <Routes>\n          \n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/addproject\" element={<AddProject />} />\n          <Route path=\"/addemployee\" element={<AddEmployee />} />\n          <Route path=\"/assignproject\" element={<Assignproject />} />\n        \n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\EMS-main\\server\\client\\src\\reportWebVitals.js",[],[],"D:\\EMS-main\\server\\client\\src\\Adminlogin.js",["60","61","62","63","64","65","66","67","68"],[],"import React, { useEffect, useState,createContext } from \"react\";\nimport { Link, Outlet, useNavigate } from \"react-router-dom\";\nimport axios from 'axios'\nimport App from \"./App\"\nexport const Adminlogin = () => {\n  let navigate  = useNavigate()\n    const [inputvalue, setInputvalue] = useState({\n        email:\"\",\n        password:\"\"\n    })\n    const[inputdata,setInputdata] = useState([])\n  \n\n  \n    const onchangeHandler = async(event) => {\n     const{name,value} =  event.target\n      setInputvalue({ ...inputvalue, [name]: value });\n    };\n\n    axios\n  .get( `http://localhost:4000/login`\n  )\n  .then((Response) => {\n    const data = Response.data\n    setInputdata(data)\n  });\n  \n    const formSubmit = async(event)=>{\n      event.preventDefault()\n\n      const validate = inputdata.filter((items,index)=>{\n       return items.email == inputvalue.email,items.password ==inputvalue.password\n       })\n \n    if(validate.length>0){\n      console.log(\"login successfull\")\n      navigate(\"/dashboard\")\n    }\nelse{\n \n  alert(\"invalid user\")\n}\n    }\n    const showPassword =()=>{\n\n    }\n  return (\n  <>\n   <div className=\"wrapper\">\n        <div className=\"card\">\n          <form\n          method=\"post\"\n            onSubmit={formSubmit}\n            className=\"d-flex flex-column mt-5\"\n          >\n            <div className=\"h3 text-center text-white\"> Admin Login</div>\n            <div className=\"d-flex align-items-center input-field my-3\">\n              {\" \"}\n              <span className=\"fa fa-user p-2\"></span>{\" \"}\n              <input\n                value={inputvalue.email}\n                name=\"email\"\n                type=\"email\"\n                placeholder=\" Email\"\n                required\n                className=\"form-control\"\n                id=\"nm\"\n                onChange={onchangeHandler}\n              />\n            </div>\n            <div className=\"d-flex align-items-center input-field mb-4\">\n            \n              <span className=\"fa fa-lock p-2\"></span>{\" \"}\n              <input\n                value={inputvalue.password ?? \"\"}\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                className=\"form-control\"\n                id=\"pwd\"\n              onChange={onchangeHandler}\n            \n              />\n              <a onClick={()=>{showPassword(Event)}} className=\"btn\" id=\"pw-btn\">\n        \n                <span className=\"fa fa-eye-slash\"></span>\n              </a>\n            </div>\n\n            <div className=\"my-3\">\n              \n              <input  type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\n            </div>\n         \n          </form>\n        </div>\n      </div>\n \n  </>\n  )\n}\n","D:\\EMS-main\\server\\client\\src\\Dashboard.js",[],[],"D:\\EMS-main\\server\\client\\src\\Adminsignup.js",[],[],"D:\\EMS-main\\server\\client\\src\\Assignproject.js",["69"],[],"import React, { useState } from \"react\";\r\nimport { Navbar } from \"./Navbar\";\r\n\r\nexport const Assignproject = () => {\r\n  const [assignvalues, setAssignvalues] = useState({\r\n    projectname: \"\",\r\n    assignto: \"\",\r\n    description: \"\",\r\n    deadline: \"\",\r\n  });\r\n  const [assignarr ,setAssignarr] = useState([])\r\n\r\n  const[editassign,setEditassign] = useState({\r\n    projectname:\"\",\r\n    assignto:\"\",\r\n    description:\"\",\r\n    deadline:\"\",\r\n  })\r\n  const inputhandler = (event) => {\r\n    const { name, value } = event.target;\r\n    setAssignvalues({ ...assignvalues, [name]: value });\r\n    console.log(assignvalues);\r\n  };\r\n  const formsubmit = async (event) => {\r\n    event.preventDefault();\r\n    await fetch(\"http://localhost:4000/assign\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(assignvalues),\r\n      headers: {\r\n        \"Content-Type\": \"Application/json\",\r\n      },\r\n    }).then((error, data) => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        console.log(\"success\");\r\n      }\r\n    });\r\n    setAssignvalues({\r\n      projectname: \"\",\r\n      assignto: \"\",\r\n      description: \"\",\r\n      date: \"\",\r\n    });\r\n  };\r\n\r\n  const showdata = async () => {\r\n    let result = await fetch(\"http://localhost:4000/showassign\")\r\n    let data = await result.json()\r\n    setAssignarr(data)\r\n    console.log(assignarr)\r\n  };\r\n\r\n  const DeleteAssign = async(id)=>{\r\n\r\n    let res = await fetch(`http://localhost:4000/deleteassign/${id}`)\r\n    let data = await res.json()\r\n    showdata();\r\n  }\r\n\r\n  const EditInputhandle = (event)=>{\r\n    const{name,value} = event.target\r\n  setEditassign({...editassign,[name]:value})\r\n\r\n  }\r\nconst Edit = async(id)=>{\r\nlet res = await fetch(`http://localhost:4000/editassign/${id}`)\r\nlet data = await res.json()\r\nsetEditassign(data)\r\n}\r\n\r\n const update = async(event)=>{\r\n   event.preventDefault();\r\nawait fetch(\"http://localhost:4000/updateassign\",{\r\n  method:'POST',\r\n  body:JSON.stringify(editassign),\r\n  headers:{\r\n    \"Content-Type\":\"Application/json\"\r\n  }\r\n}).then((error,data)=>{\r\n  if(error){\r\n    console.log(error)\r\n  }else{\r\n    console.log(data)\r\n  }\r\n})\r\nshowdata()\r\nsetEditassign({\r\n  projectname: \"\",\r\n  assignto: \"\",\r\n  description: \"\",\r\n  date: \"\",\r\n})\r\n }\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"row\">\r\n        <div className=\" wrapper wrap col-md-6 \">\r\n          <div className=\"card mt-0\" id=\"dashboard-card\">\r\n            <form\r\n              method=\"post\"\r\n              onSubmit={formsubmit}\r\n              className=\"d-flex flex-column mt-5\"\r\n            >\r\n              <div className=\"h3 text-center text-white\"> Employee Signup</div>\r\n              <div className=\"d-flex align-items-center input-field my-1\">\r\n                <span className=\"fa fa-user p-2\"></span>\r\n                <input\r\n                  onChange={inputhandler}\r\n                  name=\"projectname\"\r\n                  type=\"text\"\r\n                  placeholder=\"projectname\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"pname\"\r\n                  value={assignvalues.projectname}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"d-flex align-items-center input-field my-1\">\r\n                <span className=\"fa fa-user p-2\"></span>\r\n                <input\r\n                  onChange={inputhandler}\r\n                  name=\"assignto\"\r\n                  type=\"text\"\r\n                  placeholder=\"assignto\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"designation\"\r\n                  value={assignvalues.assignto}\r\n                />\r\n              </div>\r\n              <div className=\"d-flex align-items-center input-field my-1\">\r\n                <span className=\"fa fa-user p-2\"></span>\r\n                <input\r\n                  onChange={inputhandler}\r\n                  name=\"description\"\r\n                  type=\"text\"\r\n                  placeholder=\"description\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"desc\"\r\n                  value={assignvalues.description}\r\n                />\r\n              </div>\r\n              <div className=\"d-flex align-items-center input-field my-1\">\r\n                <span className=\"fa fa-user p-2\"></span>\r\n                <input\r\n                  onChange={inputhandler}\r\n                  name=\"deadline\"\r\n                  type=\"date\"\r\n                  placeholder=\"deadline\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  id=\"deadline\"\r\n                  value={assignvalues.deadline}\r\n                />\r\n              </div>\r\n\r\n              <div className=\" mb-1\">\r\n                <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" />\r\n              </div>\r\n              <div className=\"mb-1\"></div>\r\n            </form>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                &times;\r\n              </button>\r\n              <h4 className=\"modal-title\">Edit Employee</h4>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form action=\"\" method=\"post\" onSubmit={update}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">ProjectName:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter name\"\r\n                    id=\"ename\"\r\n                    name=\"projectname\"\r\n                    onChange={EditInputhandle}\r\n                    value={editassign.projectname ??\"\"}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">assignto:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"assignto\"\r\n                    id=\"eassign\"\r\n                    name=\"assignto\"\r\n                    onChange={EditInputhandle}\r\n                    value={editassign.assignto ??\"\"}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">description:</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"description\"\r\n                    id=\"ecno\"\r\n                    name=\"description\"\r\n                    onChange={EditInputhandle}\r\n                    value={editassign.description ??\"\"}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">deadline:</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter deadline\"\r\n                    id=\"deadline\"\r\n                    name=\"date\"\r\n                    onChange={EditInputhandle}\r\n                    value={editassign.date ??\"\"}\r\n                  />\r\n                </div>\r\n              \r\n                <div className=\"form-group form-check\"></div>\r\n                <button type=\"submit\" className=\"btn btn-primary\"  >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-default\"\r\n                data-dismiss=\"modal\"\r\n        \r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <button className=\"btn btn-warning\" onClick={showdata}>\r\n              Show data\r\n            </button>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>projectname</th>\r\n                  <th>assignto</th>\r\n                  <th>description</th>\r\n                  <th>deadline</th>\r\n                 \r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>{\r\nassignarr.map((items,index)=>{\r\nreturn(\r\n\r\n  <tr key={index}>\r\n    <td>{items.projectname}</td>\r\n    <td>{items.assignto}</td>\r\n    <td>{items.description}</td>\r\n    <td>{items.date}</td>\r\n    <td><button className='btn btn-danger' onClick={()=>{DeleteAssign(items._id)}}>delete</button>\r\n    <button onClick={()=>{Edit(items._id)}} className='btn btn-success'  data-toggle=\"modal\" data-target=\"#myModal\">Edit</button>\r\n    </td>\r\n  \r\n  </tr>\r\n)\r\n\r\n})\r\n\r\n}</tbody>\r\n            </table>\r\n          </div>\r\n\r\n</div>\r\n\r\n    </>\r\n  );\r\n};\r\n","D:\\EMS-main\\server\\client\\src\\AddProject.js",["70","71"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Navbar } from \"./Navbar\";\n\nexport const AddProject = () => {\n  const [inputvalues, setInputvalues] = useState({\n    name: \"\",\n    projectname: \"\",\n    description: \"\",\n    password: \"\",\n  });\n  const [inputdata, setInputdata] = useState([]);\n  const [EditInputdata, setEditInputdata] = useState({\n    name: \"\",\n    projectname: \"\",\n    description: \"\",\n    password: \"\",\n  });\n  const[show,setShow] = useState(true)\n\n  const InputHandler = (event) => {\n    const { name, value } = event.target;\n    setInputvalues({ ...inputvalues, [name]: value });\n    console.log(inputvalues);\n  };\n\n  const SubmitData = (event) => {\n    event.preventDefault();\n    fetch(\"http://localhost:4000/addproject\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(inputvalues),\n    }).then((error, data) => {\n      if (error) {\n        console.log(error);\n      } else {\n        console.log(\"data submitted succesfully\");\n      }\n    });\n\n    setInputvalues({\n      name: \"\",\n      projectname: \"\",\n      description: \"\",\n      password: \"\",\n    });\n  };\n  \n  const DeleteProject = async (id) => {\n    let res = await fetch(`http://localhost:4000/deleteproject/${id}`);\n    let data = await res.json();\n    // ShowProject();\n  };\n\n  axios.get(\"http://localhost:4000/showproject\").then((Response)=>{\n    let data = Response.data;\n    setInputdata(data)\n  })\n\n  // const ShowProject = async () => {\n  //   setShow(!show)\n \n  //   // let result = await fetch(\"http://localhost:4000/showproject\");\n  //   // let data = await result.json();\n  //   // setInputdata(data);\n  //   console.log(inputdata);\n  // };\n\n\n  const EditInputHandle = (event) => {\n    const { name, value } = event.target;\n    setEditInputdata({ ...EditInputdata, [name]: value });\n    console.log(EditInputdata);\n  };\n\n  const EditProject = async (id) => {\n    console.log(id);\n    let res = await fetch(`http://localhost:4000/editproject/${id}`);\n    let data = await res.json();\n    setEditInputdata(data);\n    console.log(EditInputdata);\n  };\n  \n  const update = async (event) => {\n    event.preventDefault();\n    fetch(\"http://localhost:4000/updateproject\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"Application/json\",\n      },\n      body: JSON.stringify(EditInputdata),\n    }).then((res) => {\n      res.json(\"data updated succesfully\");\n    });\n    \n    // ShowProject();\n    console.log(EditInputdata);\n    setEditInputdata({\n      name: \"\",\n      projectname: \"\",\n      description: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"row\">\n        <div className=\"wrapper wrap col-md-6\">\n          <div className=\"card top\">\n            <form\n              onSubmit={SubmitData}\n              method=\"post\"\n              className=\"d-flex flex-column mt-5\"\n            >\n              <div className=\"h3 text-center text-white\"> Add Project</div>\n              <div className=\"d-flex align-items-center input-field mb-2\">\n                <span className=\"fa fa-user p-2\"></span>\n                <input\n                  onChange={InputHandler}\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"name\"\n                  required\n                  className=\"form-control \"\n                  id=\"name\"\n                  value={inputvalues.name}\n                />\n              </div>\n              <div className=\"d-flex align-items-center input-field mb-2\">\n                <span className=\"fa fa-lock p-2\"></span>\n                <input\n                  onChange={InputHandler}\n                  name=\"projectname\"\n                  type=\"text\"\n                  placeholder=\"project name\"\n                  required\n                  className=\"form-control\"\n                  id=\"projectname\"\n                  value={inputvalues.projectname}\n                />\n              </div>\n              <div className=\"d-flex align-items-center input-field mb-2\">\n                <span className=\"fa fa-lock p-2\"></span>\n                <input\n                  onChange={InputHandler}\n                  name=\"description\"\n                  type=\"text\"\n                  placeholder=\"project description\"\n                  required\n                  className=\"form-control\"\n                  id=\"pdesc\"\n                  value={inputvalues.description}\n                />\n              </div>\n              <div className=\"d-flex align-items-center input-field mb-2\">\n                <span className=\"fa fa-lock p-2\"></span>\n                <input\n                  onChange={InputHandler}\n                  name=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                  className=\"form-control\"\n                  id=\"password\"\n                  value={inputvalues.password}\n                />\n                <a className=\"btn\" id=\"pw-btn\">\n                  <span className=\"fa fa-eye-slash\"></span>\n                </a>\n              </div>\n\n              <div className=\"my-3\">\n                <input\n                  type=\"submit\"\n                  value=\"Login\"\n                  className=\"btn btn-primary\"\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"modal\" id=\"myModal\" role=\"dialog\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                  &times;\n                </button>\n                <h4 className=\"modal-title\">Modal Header</h4>\n              </div>\n              <div className=\"modal-body\">\n                <form action=\"\" method=\"post\" onSubmit={update}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"username\"\n                      id=\"ename\"\n                      name=\"name\"\n                      onChange={EditInputHandle}\n                      value={EditInputdata.name}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Projectname:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter email\"\n                      id=\"epname\"\n                      name=\"projectname\"\n                      onChange={EditInputHandle}\n                      value={EditInputdata.projectname}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"description\">description:</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Enter email\"\n                      id=\"epdesc\"\n                      name=\"description\"\n                      onChange={EditInputHandle}\n                      value={EditInputdata.description}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"pwd\">Password:</label>\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      placeholder=\"Enter password\"\n                      id=\"epwd\"\n                      name=\"password\"\n                      onChange={EditInputHandle}\n                      value={EditInputdata.password}\n                    />\n                  </div>\n                  <div className=\"form-group form-check\"></div>\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-default\"\n                  data-dismiss=\"modal\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6\">\n          <button onClick={()=>setShow(!show)} className=\"btn btn-warning\">\n            {show?\"Hide detail\":\"Show Details\"}\n          </button>\n         <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>project name</th>\n                <th>description</th>\n                <th>password</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            {show&&   <tbody>\n              {inputdata.map((items, index) => {\n                return (\n                  <tr key={index}>\n                    <td>{items.name}</td>\n                    <td>{items.projectname}</td>\n                    <td>{items.description}</td>\n                    <td>{items.password}</td>\n                    <td>\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => {\n                          DeleteProject(items._id);\n                        }}\n                      >\n                        Delete\n                      </button>{\" \"}\n                      <button\n                        className=\"btn btn-danger\"\n                        onClick={() => {\n                          EditProject(items._id);\n                        }}\n                        data-toggle=\"modal\"\n                        data-target=\"#myModal\"\n                      >\n                        Edit\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>}\n          </table>\n         \n        </div>\n      </div>\n    </>\n  );\n};\n","D:\\EMS-main\\server\\client\\src\\AddEmployee.js",["72","73"],[],"import React,{useState} from 'react'\nimport { Navbar } from './Navbar'\n\nexport const AddEmployee = () => {\nconst[inputvalues,setInputvalues] =  useState({\n  name:\"\",\n  designation:\"\",\n  cno:\"\",\n  eid:\"\",\n  gender:\"\",\n  password:\"\"\n  \n})\nconst[employee,setEmployee] = useState([])\nconst[editdata,setEditdata] = useState({\n  name:\"\",\n  designation:\"\",\n  cno:\"\",\n  eid:\"\",\n  gender:\"\",\n  password:\"\"\n})\n\n\n  const inputhandler = (event)=>{\nconst{name,value} = event.target;\nsetInputvalues({...inputvalues,[name]:value})\nconsole.log(inputvalues)\n  }\n  const formsubmit = async(event)=>{\n    event.preventDefault()\nawait fetch(\"http://localhost:4000/addemployee\",{\nmethod:\"POST\",\nheaders:{\n\"Content-Type\":\"application/json\"\n},\nbody:JSON.stringify(inputvalues)\n\n}).then((error,data)=>{\n  if(error){\n    console.log(error)\n  }\n  else{\n    console.log('data submitted succesfully')\n  }\n})\n\nsetInputvalues({\n  name:\"\",\n  designation:\"\",\n  cno:\"\",\n  eid:\"\",\n  gender:\"\",\n  password:\"\"\n})\n  }\n  const showdata = async()=>{\n   \nconst res =await fetch(\"http://localhost:4000/showemployee\")\nconst data =await res.json()\nsetEmployee(data)\n  }\n\n  const DeleteEmployee = async(id)=>{\n\n    let res = await fetch(`http://localhost:4000/deletemployee/${id}`)\n    let data = await res.json()\n    showdata();\n  }\n  \n  const EditInputhandle = (event)=>{\n    let name = event.target.name;\n    let value = event.target.value;\n    setEditdata({...editdata,[name]:value})\n    console.log(editdata)\n  }\n  \n    const EditEmployee = async(id)=>{\n      let res = await fetch(`http://localhost:4000/editemployee/${id}`)\n      let data = await res.json();\n      setEditdata(data);\n  \n    }\n  \n  const update  = async(event)=>{\n    event.preventDefault();\n    await fetch(\"http://localhost:4000/updatemployee\",{\n      method:\"POST\",\n      headers:{\n        \"Content-Type\":\"Application/json\"\n      },\n      body:JSON.stringify(editdata)\n    }).then((res)=>{\n      res.json(\"data updated succesfully\")\n    })\n\n    showdata();\n    setEditdata({\n      name:\"\",\n      designation:\"\",\n      cno:\"\",\n      eid:\"\",\n      gender:\"\",\n      password:\"\"\n    })\n  }\n  return (\n    <>\n    <Navbar/>\n<div className=\"row\">\n\n    <div className=\" wrapper wrap col-md-6 \">\n      <div className=\"card mt-0\" id=\"dashboard-card\">\n        <form \n          method=\"post\"\n          onSubmit={formsubmit}\n          className=\"d-flex flex-column mt-5\"\n        >\n          <div className=\"h3 text-center text-white\"> Employee Signup</div>\n          <div className=\"d-flex align-items-center input-field my-1\">\n            <span className=\"fa fa-user p-2\"></span>\n            <input\n              onChange={inputhandler}\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"employee name\"\n              required\n              className=\"form-control\"\n              id=\"name\"\n              value={inputvalues.name}\n            />\n          </div>\n       \n         \n          <div className=\"d-flex align-items-center input-field my-1\">\n            <span className=\"fa fa-user p-2\"></span>\n            <input\n              onChange={inputhandler}\n              name=\"designation\"\n              type=\"text\"\n              placeholder=\"Designation\"\n              required\n              className=\"form-control\"\n              id=\"designation\"\n              value={inputvalues.designation}\n       \n              />\n          </div>\n          <div className=\"d-flex align-items-center input-field my-1\">\n            <span className=\"fa fa-user p-2\"></span>\n            <input\n              onChange={inputhandler}\n              name=\"cno\"\n              type=\"text\"\n              placeholder=\"contact no\"\n              required\n              className=\"form-control\"\n              id=\"cno\"\n              value={inputvalues.cno}\n              />\n          </div>\n          <div className=\"d-flex align-items-center input-field my-1\">\n            <span className=\"fa fa-user p-2\"></span>\n            <input\n              onChange={inputhandler}\n              name=\"eid\"\n              type=\"text\"\n              placeholder=\"email id\"\n              required\n              className=\"form-control\"\n              id=\"eid\"\n              value={inputvalues.eid}\n              />\n          </div>\n          <div className=\"d-flex align-items-center input-field my-1\">\n            <span className=\"fa fa-user p-2\"></span>\n            <input\n              onChange={inputhandler}\n              name=\"gender\"\n              type=\"text\"\n              placeholder=\"gender\"\n              required\n              className=\"form-control\"\n              id=\"gender\"\n            value={inputvalues.gender}\n            />\n          </div>\n          <div className=\"d-flex align-items-center input-field mb-4\">\n            <span className=\"fa fa-lock p-2\"></span>{\" \"}\n            <input\n              onChange={inputhandler}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              required\n              className=\"form-control\"\n              id=\"pwd\"\n              value={inputvalues.password}\n            />\n            <a className=\"btn\" id=\"pw-btn\">\n              <span className=\"fa fa-eye-slash\"></span>\n            </a>\n          </div>\n\n          <div className=\" mb-1\">\n            <input type=\"submit\" value=\"Add\" className=\"btn btn-primary\" />\n          </div>\n          <div className=\"mb-1\">\n        \n          </div>\n        </form>\n      </div>\n    \n\n  </div>\n\n \n\n  <div className=\"modal fade\" id=\"myModal\" role=\"dialog\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\n                &times;\n              </button>\n              <h4 className=\"modal-title\">Edit Employee</h4>\n            </div>\n            <div className=\"modal-body\">\n              <form action=\"\" method=\"post\" onSubmit={update}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Name:</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter name\"\n                    id=\"ename\"\n                    name=\"name\"\n                    onChange={EditInputhandle}\n                    value={editdata.name}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Designation:</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter designation\"\n                    id=\"edeg\"\n                    name=\"designation\"\n                    onChange={EditInputhandle}\n                    value={editdata.designation}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Contact:</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter contact\"\n                    id=\"ecno\"\n                    name=\"cno\"\n                    onChange={EditInputhandle}\n                    value={editdata.cno}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Email:</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Enter Email\"\n                    id=\"eeid\"\n                    name=\"eid\"\n                    onChange={EditInputhandle}\n                    value={editdata.eid}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Gender:</label>\n                  <input\n                    type=\"name\"\n                    className=\"form-control\"\n                    placeholder=\"Enter email\"\n                    id=\"egender\"\n                    name=\"gender\"\n                    onChange={EditInputhandle}\n                    value={editdata.gender}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"pwd\">Password:</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    placeholder=\"Enter password\"\n                    id=\"epwd\"\n                    name=\"password\"\n                    onChange={EditInputhandle}\n                    value={editdata.password}\n                  />\n                </div>\n                <div className=\"form-group form-check\"></div>\n                <button type=\"submit\" className=\"btn btn-primary\"  >\n                  Submit\n                </button>\n              </form>\n            </div>\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-default\"\n                data-dismiss=\"modal\"\n        \n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n<div className=\"col-md-6\">\n  <button className='btn btn-warning' onClick={showdata}>Show data</button>\n <table className=\"table\">\n   <thead>\n     <tr>\n       <th>name</th>\n       <th>designation</th>\n       <th>contact</th>\n       <th>email</th>\n       <th>gender</th>\n       <th>password</th>\n     </tr>\n   </thead>\n\n <tbody>{\nemployee.map((items,index)=>{\nreturn(\n\n  <tr key={index}>\n    <td>{items.name}</td>\n    <td>{items.designation}</td>\n    <td>{items.cno}</td>\n    <td>{items.eid}</td>\n    <td>{items.gender}</td>\n    <td>{items.password}</td>\n    <td><button className='btn btn-danger' onClick={()=>{DeleteEmployee(items._id)}}>delete</button>\n    <button onClick={()=>{EditEmployee(items._id)}} className='btn btn-success'  data-toggle=\"modal\" data-target=\"#myModal\">Edit</button>\n    </td>\n  \n  </tr>\n)\n\n})\n\n}</tbody>\n </table>\n</div>\n</div>\n    </>\n  )\n}\n","D:\\EMS-main\\server\\client\\src\\Navbar.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":12},{"ruleId":"74","severity":1,"message":"78","line":4,"column":9,"nodeType":"76","messageId":"77","endLine":4,"endColumn":15},{"ruleId":"74","severity":1,"message":"79","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":21},{"ruleId":"74","severity":1,"message":"80","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"81","line":1,"column":37,"nodeType":"76","messageId":"77","endLine":1,"endColumn":50},{"ruleId":"74","severity":1,"message":"82","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":14},{"ruleId":"74","severity":1,"message":"83","line":2,"column":16,"nodeType":"76","messageId":"77","endLine":2,"endColumn":22},{"ruleId":"74","severity":1,"message":"84","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":11},{"ruleId":"85","severity":1,"message":"86","line":32,"column":27,"nodeType":"87","messageId":"88","endLine":32,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":32,"column":46,"nodeType":"91","messageId":"92","endLine":32,"endColumn":47},{"ruleId":"85","severity":1,"message":"86","line":32,"column":62,"nodeType":"87","messageId":"88","endLine":32,"endColumn":64},{"ruleId":"93","severity":1,"message":"94","line":85,"column":15,"nodeType":"95","endLine":85,"endColumn":82},{"ruleId":"74","severity":1,"message":"96","line":57,"column":9,"nodeType":"76","messageId":"77","endLine":57,"endColumn":13},{"ruleId":"74","severity":1,"message":"96","line":53,"column":9,"nodeType":"76","messageId":"77","endLine":53,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":171,"column":17,"nodeType":"95","endLine":171,"endColumn":48},{"ruleId":"74","severity":1,"message":"96","line":67,"column":9,"nodeType":"76","messageId":"77","endLine":67,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":200,"column":13,"nodeType":"95","endLine":200,"endColumn":44},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Adminsignup' is defined but never used.","'useEffect' is defined but never used.","'createContext' is defined but never used.","'Link' is defined but never used.","'Outlet' is defined but never used.","'App' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'data' is assigned a value but never used."]